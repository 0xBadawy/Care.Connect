<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        yBXC/pLdAAAAAElFTkSuQmCC
</value>
  </data>
</root>